services:
  redis:
    image: redis:7-alpine
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --requirepass ${REDIS_PASSWORD}
      --protected-mode yes
    ports:
      - "6379:6379"
    volumes:
      - ${REDIS_DATA_DIR}:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} PING | grep PONG"]
      interval: 3s
      timeout: 2s
      retries: 20
    env_file:
      - .env
    restart: unless-stopped

  redis-insight:
    image: redis/redisinsight:latest
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "5541:5540"
    restart: unless-stopped

  redis-init-queues:
    image: redis:7-alpine
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./redis/init:/init:ro
    env_file:
      - ./.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    entrypoint: ["/bin/sh","-c","/init/init.sh"]
    restart: on-failure:3

  qdrant:
    image: qdrant/qdrant:latest
    env_file:
      - ./.env
    environment:
      QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY}
    volumes:
      - ${QDRANT_STORAGE_DIR}:/qdrant/storage
      - ${QDRANT_SNAPSHOTS_DIR}:/qdrant/snapshots
    ports:
      - "6333:6333"
    restart: unless-stopped

  qdrant-init:
    build:
      context: .
      dockerfile_inline: |
        FROM alpine:3.20
        RUN apk add --no-cache bash curl
        WORKDIR /workspace/embedings
    depends_on:
      qdrant:
        condition: service_started
    working_dir: /workspace/embedings
    volumes:
      - .:/workspace:ro
    env_file:
      - ./.env
    environment:
      - QDRANT_HOST=http://qdrant:6333
    entrypoint: ["bash","-lc","./scripts/qdrant-init.sh"]
    restart: on-failure:3

  embeder:
    build:
      context: ./embeder-service
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8081 --reload --log-level debug
    ports:
      - "8081:8081"
    volumes:
      - ./embeder-service:/app:cached
    env_file:
      - ./.env
      - ./embeder-service/.env
    environment:
      - QDRANT_HOST=http://qdrant:6333
    depends_on:
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
      redis-init-queues:
        condition: service_completed_successfully
      qdrant-init:
        condition: service_completed_successfully
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu] 
    restart: unless-stopped

  inserter:
    build:
      context: ./inserter-service
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8082 --reload --log-level debug
    ports:
      - "8082:8082"
    depends_on:
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
      redis-init-queues:
        condition: service_completed_successfully
      qdrant-init:
        condition: service_completed_successfully
    env_file:
      - ./.env
      - ./inserter-service/.env
    environment:
      - QDRANT_HOST=http://qdrant:6333
    restart: unless-stopped

  av-worker:
    build:
      context: ./video-processor
      dockerfile: dockerfile
    working_dir: /workspace/video-processor
    command: ["sh","-lc","uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload"]
    ports:
      - "8080:8080"
    volumes:
      - ./:/workspace
    env_file:
      - ./.env
      - ./video-processor/.env
    environment:
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES}
    depends_on:
      redis:
        condition: service_healthy
      redis-init-queues:
        condition: service_completed_successfully
    restart: unless-stopped

